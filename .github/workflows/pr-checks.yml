name: PR Checks
run-name: PR Checks
on: [pull_request]
jobs:
  pr-checks:
    runs-on: ubuntu-latest
    # Add postgres service for integration testing
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.10
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      # Checkout the code for the branch
      - name: Check out repository code
        uses: actions/checkout@v4

      # Install NodeJS
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      # Install node_modules
      - name: Install node_modules
        run: npm install

      # Ensure linter passes
      - name: Run eslint
        run: npx eslint src

      # Inject configs that are not tracked in git
      - name: Create db config file
        run: |
          touch src/config/db.ts && echo "
          export const DB_USERNAME = 'postgres';
          export const DB_PASSWORD = 'postgres';
          export const DB_HOSTNAME = 'localhost';
          export const DB_PORT = '5432';
          export const DB_NAME = 'postgres';" > src/config/db.ts
      - name: Create auth config file
        run: |
          touch src/config/auth.ts && echo "
          export const SECRET = 'super_secret_secret';
          export const SALT_ROUNDS = 7;" > src/config/auth.ts

      # Ensure the app can be built
      - name: Build app
        run: npm run build

      # Start the server and wait for it to start listening
      - name: Start server and wait for it to be listening
        run: npm run start:prod & timeout 30 sh -c 'until nc -z $0 $1; do sleep 1; done' localhost 3000

      # Run integration tests
      - name: Run integration tests
        run: npx jest --verbose --detectOpenHandles
